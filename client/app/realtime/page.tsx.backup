'use client'

import { useState, useEffect } from 'react'
import { useLiveData, useLiveComments, useSocket } from '../hooks/useSocket'

// Mock data generator for testing
const generateMockComment = () => ({
  id: Math.random().toString(36).substr(2, 9),
  user_name: ['John Doe', 'Sarah Wilson', 'Mike Chen', 'Emma Johnson'][Math.floor(Math.random() * 4)],
  message: [
    'This is amazing! üî•',
    'When will this be available?',
    'Love the real-time updates!',
    'Better than SystemKH for sure! üíØ',
    'The UI is so clean and modern',
    'Can we get early access?'
  ][Math.floor(Math.random() * 6)],
  posted_at: new Date().toISOString()
})

export default function RealTimeDemo() {
  const { socket, isConnected, connectionError } = useSocket()
  const { liveStats } = useLiveData()
  const { comments, newCommentCount, markCommentsAsRead } = useLiveComments('demo-stream')
  
  const [mockComments, setMockComments] = useState<any[]>([])
  const [isDemo, setIsDemo] = useState(false)

  // Mock real-time simulation when socket is not connected
  useEffect(() => {
    if (!isConnected && isDemo) {
      const interval = setInterval(() => {
        const newComment = generateMockComment()
        setMockComments(prev => [newComment, ...prev].slice(0, 20))
      }, 3000)

      return () => clearInterval(interval)
    }
  }, [isConnected, isDemo])

  const displayComments = isConnected ? comments : mockComments

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-8">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-4">
            üöÄ LiveSell Pro - Real-Time Features Demo
          </h1>
          <p className=\"text-lg text-gray-600\">
            Experience the power of real-time updates that SystemKH can't match!
          </p>
        </div>

        {/* Connection Status */}
        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-8\">
          <div className=\"flex items-center justify-between\">
            <div className=\"flex items-center space-x-3\">
              <div className={`w-3 h-3 rounded-full $${isConnected ? 'bg-green-500 animate-pulse' : 'bg-red-500'}`}></div>
              <span className=\"font-semibold\">
                {isConnected ? 'üü¢ Connected to LiveSell Pro Server' : 'üî¥ Server Offline (Demo Mode)'}
              </span>
            </div>
            
            {!isConnected && (
              <button
                onClick={() => setIsDemo(!isDemo)}
                className={`px-4 py-2 rounded-lg font-medium transition-all ${
                  isDemo 
                    ? 'bg-red-500 text-white hover:bg-red-600' 
                    : 'bg-blue-500 text-white hover:bg-blue-600'
                }`}
              >
                {isDemo ? 'Stop Demo' : 'Start Demo'}
              </button>
            )}
          </div>
          
          {connectionError && (
            <div className=\"mt-2 text-sm text-red-600\">
              Connection Error: {connectionError}
            </div>
          )}
        </div>

        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">
          {/* Live Stats Dashboard */}
          <div className=\"lg:col-span-2 space-y-6\">
            <div className=\"bg-white rounded-2xl shadow-lg p-6\">
              <h2 className=\"text-2xl font-bold text-gray-800 mb-6 flex items-center\">
                üìä Live Analytics Dashboard
                <span className=\"ml-2 text-sm bg-green-100 text-green-800 px-2 py-1 rounded-full\">
                  Real-time
                </span>
              </h2>
              
              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">
                <div className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white p-4 rounded-xl\">
                  <div className=\"text-sm opacity-90\">Active Streams</div>
                  <div className=\"text-2xl font-bold\">{isDemo ? Math.floor(Math.random() * 15) + 5 : liveStats.activeStreams}</div>
                </div>
                
                <div className=\"bg-gradient-to-r from-green-500 to-green-600 text-white p-4 rounded-xl\">
                  <div className=\"text-sm opacity-90\">Total Comments</div>
                  <div className=\"text-2xl font-bold\">{isDemo ? displayComments.length * 45 : liveStats.totalComments}</div>
                </div>
                
                <div className=\"bg-gradient-to-r from-purple-500 to-purple-600 text-white p-4 rounded-xl\">
                  <div className=\"text-sm opacity-90\">Live Viewers</div>
                  <div className=\"text-2xl font-bold\">{isDemo ? Math.floor(Math.random() * 500) + 100 : liveStats.viewerCount}</div>
                </div>
                
                <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white p-4 rounded-xl\">
                  <div className=\"text-sm opacity-90\">Engagement Rate</div>
                  <div className=\"text-2xl font-bold\">{isDemo ? (Math.random() * 15 + 85).toFixed(1) : liveStats.engagementRate}%</div>
                </div>
              </div>
            </div>

            {/* Feature Comparison */}
            <div className=\"bg-white rounded-2xl shadow-lg p-6\">
              <h3 className=\"text-xl font-bold text-gray-800 mb-4\">üöÄ LiveSell Pro vs SystemKH</h3>
              <div className=\"space-y-3\">
                <div className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">
                  <span className=\"font-medium\">Real-time Updates</span>
                  <div className=\"flex space-x-4\">
                    <span className=\"text-green-600 font-bold\">‚úÖ Instant</span>
                    <span className=\"text-red-600\">‚ùå 30s delay</span>
                  </div>
                </div>
                
                <div className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">
                  <span className=\"font-medium\">Modern UI/UX</span>
                  <div className=\"flex space-x-4\">
                    <span className=\"text-green-600 font-bold\">‚úÖ Beautiful</span>
                    <span className=\"text-red-600\">‚ùå Outdated</span>
                  </div>
                </div>
                
                <div className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">
                  <span className=\"font-medium\">Socket.IO WebSockets</span>
                  <div className=\"flex space-x-4\">
                    <span className=\"text-green-600 font-bold\">‚úÖ Yes</span>
                    <span className=\"text-red-600\">‚ùå No</span>
                  </div>
                </div>
                
                <div className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">
                  <span className=\"font-medium\">Pricing</span>
                  <div className=\"flex space-x-4\">
                    <span className=\"text-green-600 font-bold\">‚úÖ 34% Cheaper</span>
                    <span className=\"text-red-600\">‚ùå Expensive</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Live Comments Feed */}
          <div className=\"bg-white rounded-2xl shadow-lg p-6 h-fit\">
            <div className=\"flex items-center justify-between mb-4\">
              <h3 className=\"text-xl font-bold text-gray-800\">üí¨ Live Comments</h3>
              {newCommentCount > 0 && (
                <span className=\"bg-red-500 text-white text-xs px-2 py-1 rounded-full\">
                  {newCommentCount} new
                </span>
              )}
            </div>
            
            <div className=\"space-y-3 max-h-96 overflow-y-auto\">
              {displayComments.length === 0 ? (
                <div className=\"text-center text-gray-500 py-8\">
                  {isDemo ? 'Click \"Start Demo\" to see live comments' : 'Waiting for comments...'}
                </div>
              ) : (
                displayComments.map((comment, index) => (
                  <div key={comment.id || index} className=\"p-3 bg-gray-50 rounded-lg animate-fade-in\">
                    <div className=\"font-semibold text-sm text-blue-600\">
                      {comment.user_name}
                    </div>
                    <div className=\"text-gray-800 text-sm mt-1\">
                      {comment.message}
                    </div>
                    <div className=\"text-xs text-gray-500 mt-1\">
                      {new Date(comment.posted_at).toLocaleTimeString()}
                    </div>
                  </div>
                ))
              )}
            </div>
            
            {displayComments.length > 0 && (
              <button
                onClick={markCommentsAsRead}
                className=\"w-full mt-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"
              >
                Mark All as Read
              </button>
            )}
          </div>
        </div>

        {/* Technology Stack */}
        <div className=\"mt-8 bg-white rounded-2xl shadow-lg p-6\">
          <h3 className=\"text-xl font-bold text-gray-800 mb-4\">‚ö° Powered by Modern Technology</h3>
          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">
            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">
              <div className=\"text-2xl mb-2\">‚öõÔ∏è</div>
              <div className=\"font-semibold\">Next.js 14</div>
            </div>
            <div className=\"text-center p-4 bg-green-50 rounded-lg\">
              <div className=\"text-2xl mb-2\">üöÄ</div>
              <div className=\"font-semibold\">Socket.IO</div>
            </div>
            <div className=\"text-center p-4 bg-purple-50 rounded-lg\">
              <div className=\"text-2xl mb-2\">üíé</div>
              <div className=\"font-semibold\">TypeScript</div>
            </div>
            <div className=\"text-center p-4 bg-orange-50 rounded-lg\">
              <div className=\"text-2xl mb-2\">üé®</div>
              <div className=\"font-semibold\">Tailwind CSS</div>
            </div>
          </div>
        </div>
      </div>

      <style jsx>{`
        @keyframes fade-in {
          from { opacity: 0; transform: translateY(10px); }
          to { opacity: 1; transform: translateY(0); }
        }
        .animate-fade-in {
          animation: fade-in 0.3s ease-out;
        }
      `}</style>
    </div>
  )
}